Software architecture ?

Software architecture refers to the high-level structures of a software system and the discipline of creating such structures. It involves the set of significant decisions about the organization of a software system including the selection of structural elements and their interfaces by which the system is composed and behavior as specified in collaborations among those elements

What is Software Architect?
An expert developer who design software solutions from the ground up, making high-level decisions about each stage of the process including technical standards, tools, design principles, platforms to be used, etc., leading a team of engineers to create the final product.

Levels of Architecture ?

Architecture can be done on several “levels” of abstractions. The level influences the importance of necessary skills. As there are many categorizations possible my favorite segmentation includes these 3 levels:

Application Level: The lowest level of architecture. Focus on one single application. Very detailed, low level design. Communication is usually within one development team.

Solution Level: The mid-level of architecture. Focus on one or more applications which fulfill a business need (business solution). Some high, but mainly low-level design. Communication is between multiple development teams.

Enterprise Level: The highest level of architecture. Focus on multiple solutions. High level, abstract design, which needs to be detailed out by solution or application architects. Communication is across the organization.


Architect Responsibilities

To understand the necessary skills an architect needs, we first need to understand typical activities. The following list contains from my perspective the most important activities:

Define and decide development technology and platform
Define development standards, e.g., coding standards, tools, review processes, test approach, etc.
Support identifying and understanding business requirements
Design systems and take decisions based on requirements
Document and communicate architectural definitions, design and decisions
Check and review architecture and code, e.g., check if defined patterns and coding standards are implemented properly
Collaborate with other architects and stakeholders
Coach and consult developers
Make sure that as implementation takes place, the architecture is being adhered to
Play a key part in reviewing code
Detail out and refine higher level design into lower level design
